// Khai báo IAM Role
resource "aws_iam_role" "example" {
  name = "example-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [{
      Action = "sts:AssumeRole",
      Principal = {
        Service = "ec2.amazonaws.com"
      },
      Effect = "Allow",
      Sid    = ""
    }]
  })
}

// Tạo IAM Instance Profile và gắn Role vào Profile
resource "aws_iam_instance_profile" "example" {
  name = "example-instance-profile"
  role = aws_iam_role.example.name
}

// Tạo EC2 instance với IAM Role và Security Group
resource "aws_instance" "AppInstance" {
  ami                    = "ami-0f844a9675b22ea32"
  instance_type          = "t2.micro"
  key_name               = "keypair-01"
  security_groups        = ["${aws_security_group.rules.name}"]
  vpc_security_group_ids = [aws_security_group.rules.id]
  iam_instance_profile   = aws_iam_instance_profile.example.name
  user_data              = file("ec2-userdata.bash")


  tags = {
    name = "AppInstance"
  }

  connection {
    type        = "ssh"
    user        = "ec2-user"
    private_key = file("./keypair-01.pem")
    host        = aws_instance.AppInstance.public_ip
  }

  provisioner "remote-exec" {
    inline = [
      "sudo yum install httpd php -y",
      "sudo systemctl restart httpd",
      "sudo systemctl enable httpd"
    ]
  }
}

// Tạo EBS volume và gắn vào EC2 instance
resource "aws_ebs_volume" "EBS" {
  availability_zone = aws_instance.AppInstance.availability_zone
  size              = 1
  type              = "gp2"
  tags = {
    Name = "app_storage"
  }
}

resource "aws_volume_attachment" "EBS_Attach" {
  device_name  = "/dev/sdh"
  volume_id    = aws_ebs_volume.EBS.id
  instance_id  = aws_instance.AppInstance.id
  force_detach = true
}

// Tạo IAM Policy cho quyền truy cập S3
resource "aws_iam_policy" "s3-access-policy" {
  name = "s3-access-policy"

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [{
      Action = [
        "s3:GetObject",
        "s3:PutObject",
        "s3:ListBucket"
      ],
      Effect = "Allow",
      Resource = [
        "arn:aws:s3:::web-media-bucket",
        "arn:aws:s3:::web-media-bucket/*"
      ]
    }]
  })
}

// Gắn IAM Policy cho Instance Profile
resource "aws_iam_policy_attachment" "example_attachment" {
  name       = "example-policy-attachment"
  policy_arn = aws_iam_policy.s3-access-policy.arn
  roles      = [aws_iam_role.example.name]
}

// Tạo S3 Bucket
resource "aws_s3_bucket" "web-streamingmedia" {
  bucket = "web-media-bucket"
}

# Ghi đè lên tệp tin index.html
resource "aws_s3_object" "index_html" {
  bucket       = aws_s3_bucket.web-streamingmedia.id
  key          = "index.html"
  source       = "./web/index.html" # Đường dẫn tới tệp index.html cục bộ
  content_type = "text/html"
  etag         = filemd5("./web/index.html")
}

# Ghi đè lên tệp tin style.css
resource "aws_s3_object" "style_css" {
  bucket       = aws_s3_bucket.web-streamingmedia.id
  key          = "styles.css"
  source       = "./web/styles.css" # Đường dẫn tới tệp style.css cục bộ
  content_type = "text/css"
  etag         = filemd5("./web/styles.css")
}

# Ghi đè lên tệp tin script.js
resource "aws_s3_object" "script_js" {
  bucket       = aws_s3_bucket.web-streamingmedia.id
  key          = "script.js"
  source       = "./web/script.js" # Đường dẫn tới tệp script.js cục bộ
  content_type = "application/javascript"
  etag         = filemd5("./web/script.js")
}


// Sao chép tệp từ Amazon S3 vao EC2
resource "null_resource" "Remote" {
  depends_on = [
    aws_instance.AppInstance,
    aws_volume_attachment.EBS_Attach,
    aws_s3_bucket.web-streamingmedia,
    aws_s3_object.index_html,
    aws_s3_object.script_js,
    aws_s3_object.style_css
  ]
  connection {
    type        = "ssh"
    user        = "ec2-user"
    private_key = file("./keypair-01.pem")
    host        = aws_instance.AppInstance.public_ip
  }
  provisioner "remote-exec" {
    inline = [
      "sudo rm -rf /var/www/html/*",
      "sudo aws s3 cp s3://web-media-bucket/index.html /var/www/html/index.html",
      "sudo aws s3 cp s3://web-media-bucket/styles.css /var/www/html/styles.css",
      "sudo aws s3 cp s3://web-media-bucket/script.js /var/www/html/script.js"
    ]
  }
}


// Output: Địa chỉ IP và tên miền để truy cập web
output "public_ip" {
  value = aws_instance.AppInstance.public_ip
}

output "public_dns" {
  value = aws_instance.AppInstance.public_dns
}

// launch the Application
resource "null_resource" "nulllocal1" {
  provisioner "local-exec" {
    command = "xdg-open http://${aws_instance.AppInstance.public_ip}"
  }
}